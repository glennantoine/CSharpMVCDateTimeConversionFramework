//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CustomModelBindingWithDateTime.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ValidationResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ValidationResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CustomModelBindingWithDateTime.Resources.ValidationResource", typeof(ValidationResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Binding Context.
        /// </summary>
        internal static string BindingContext {
            get {
                return ResourceManager.GetString("BindingContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date added is required..
        /// </summary>
        internal static string DateAddedRequired {
            get {
                return ResourceManager.GetString("DateAddedRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be in the future..
        /// </summary>
        internal static string DateCannotBeInTheFutureValid {
            get {
                return ResourceManager.GetString("DateCannotBeInTheFutureValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Date Range Entered.
        /// </summary>
        internal static string DateComparison {
            get {
                return ResourceManager.GetString("DateComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is improperly formated: MM/DD/YYYY..
        /// </summary>
        internal static string DateFormat {
            get {
                return ResourceManager.GetString("DateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is improperly formated: MM/DD/YYYY..
        /// </summary>
        internal static string DateFormatValid {
            get {
                return ResourceManager.GetString("DateFormatValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date is invalid..
        /// </summary>
        internal static string DateInvalid {
            get {
                return ResourceManager.GetString("DateInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be after {1}..
        /// </summary>
        internal static string DateMustBeAfterDateValid {
            get {
                return ResourceManager.GetString("DateMustBeAfterDateValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be before {1}..
        /// </summary>
        internal static string DateMustBeBeforeDateValid {
            get {
                return ResourceManager.GetString("DateMustBeBeforeDateValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be greater than or equal to {1}.
        /// </summary>
        internal static string DateMustBeGreaterThanEqualTo {
            get {
                return ResourceManager.GetString("DateMustBeGreaterThanEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be in the past..
        /// </summary>
        internal static string DateMustBeInThePastValid {
            get {
                return ResourceManager.GetString("DateMustBeInThePastValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be less than {1} years in the future.
        /// </summary>
        internal static string DateMustBeLessThanYearsInFuture {
            get {
                return ResourceManager.GetString("DateMustBeLessThanYearsInFuture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be in the future.
        /// </summary>
        internal static string DateNotInFuture {
            get {
                return ResourceManager.GetString("DateNotInFuture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be in the past.
        /// </summary>
        internal static string DateNotInPast {
            get {
                return ResourceManager.GetString("DateNotInPast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateNotInPastValid.
        /// </summary>
        internal static string DateNotInPastValid {
            get {
                return ResourceManager.GetString("DateNotInPastValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more errors occured with the date range. Please see summary of errors at top of page for details..
        /// </summary>
        internal static string DateRangeSummary {
            get {
                return ResourceManager.GetString("DateRangeSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date is required.
        /// </summary>
        internal static string DateRequired {
            get {
                return ResourceManager.GetString("DateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is required.
        /// </summary>
        internal static string IsRequiredValid {
            get {
                return ResourceManager.GetString("IsRequiredValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is improperly formatted: HH:MM AM/PM..
        /// </summary>
        internal static string TimeFormatValid {
            get {
                return ResourceManager.GetString("TimeFormatValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be greater than or equal to {1}.
        /// </summary>
        internal static string TimeMustBeGreaterThanEqualTo {
            get {
                return ResourceManager.GetString("TimeMustBeGreaterThanEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time cannot be in the future.
        /// </summary>
        internal static string TimeNotFuture {
            get {
                return ResourceManager.GetString("TimeNotFuture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time is required.
        /// </summary>
        internal static string TimeRequired {
            get {
                return ResourceManager.GetString("TimeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to must be set to use the UiDateTimeModel.
        /// </summary>
        internal static string UiDateTimeModelTimeZoneRequired {
            get {
                return ResourceManager.GetString("UiDateTimeModelTimeZoneRequired", resourceCulture);
            }
        }
    }
}
