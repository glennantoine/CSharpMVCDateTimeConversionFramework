@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h2>@ViewBag.Message</h2>
            </hgroup>
            <p>This application was created for the sole purpose of testing the Custom Model Binder and the associated UiDateAndTimeModel 
               for the handling of Time Zone Conversation between the Views and their associated Controller Actions. 
            </p>
        </div>
    </section>
}
<h3>Here is what you will find:</h3>
<ol class="round">
    <li class="one">
        <h5>Getting Started</h5>
        Model binding in the ASP.NET MVC framework is simple. Your action methods need data, and the incoming HTTP request carries the data you need. 
        The catch is that the data is embedded into POST-ed form values, and possibly the URL itself. Enter the DefaultModelBinder, which can magically 
        convert form values and route data into objects. Model binders allow your controller code to remain cleanly separated from the dirtiness of 
        interrogating the request and its associated environment.<br />
        Model binding is also one of the extensibility points in the MVC framework. If you can’t use the default binding behavior you can provide your 
        own model binders, and mix and match binders. To implement a custom model binder you need to implement the IModelBinder interface.<br />
        Scott Hanselman had a post on the creation of a custom model binder <a href="http://www.hanselman.com/blog/SplittingDateTimeUnitTestingASPNETMVCCustomModelBinders.aspx" target="_blank">
        “Splitting DateTime – Unit Testing ASP.NET MVC Custom Model Binders”</a> which turned out to be a great starting point for this venture.
    </li>
    <li class="two">
        <h5>UiDateTimeModel</h5>
            <p>
            In order to leverage the custom UiDateTimeModel the UiDateTimeModelBinder will handle the conversions of Dates/Times to UTC during post.
            For more information see: <a href="~/Home/UiDateTimeModel">UiDateTimeModel</a>
            </p>
            @Html.ActionLink("UiDateTimeModel Test Form", "UiDateTimeTest", "UiDateTime")
    </li>
    <li class="three">
        <h5>UiDateTimeRangeModel</h5>
            <p>
            In order to leverage the custom DateAndTimeRangeModel the UiDateTimeRangeModelBinder will handle the conversions of Dates/Times to UTC during post.
             For more information see: <a href="~/Home/UiDateTimeRangeModel">UiDateTimeRangeModel</a>
            </p>
            @Html.ActionLink("UiDateTimeRangeModel Test Form", "UiDateTimeRangeTest", "UiDateTime")
    </li>
    <li class="four">
        <h5>DateAndTimeModelBinder</h5>
        While the UiDateTimeModel is the piece of this puzzle that you will work with most often, the DateAndTimeModelBinder sits quietly in the back ground making all of the magic happen.
        In order to cover all of the details of what is happening with the custom model binder I would need to provide considerably more information than what will fit here. However as a starting point
        and some more information see: <a href="~/Home/DateAndTimeModelBinder">DateAndTimeModelBinder</a>
    </li>

</ol>
